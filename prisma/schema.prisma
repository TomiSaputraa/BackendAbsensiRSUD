generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id_user         String        @id @unique @db.VarChar(7)
  password_hash   String        @db.VarChar(60)
  nama_lengkap    String        @db.VarChar(255)
  jabatan         Jabatan?      @default(None)
  ruangan         String?       @db.VarChar(20)
  grup            Grup?         @default(None)
  jenis_kelamin   JenisKelamin? @default(Pria)
  email           String?       @db.VarChar(255)
  no_hp           String?       @db.VarChar(15)
  foto_profil     String        @db.VarChar(255)
  bergabung_sejak DateTime?     @default(now()) @db.DateTime()
  role            String?       @default("user") @db.VarChar(10)
  Absensi         Absensi[]
  Izin            Izin[]
  Cuti            Cuti[]
  Sakit           Sakit[]
}

enum Jabatan {
  Kepala_Instalasi
  Nutrisionis
  Logistik
  Administrasi
  None
}

enum Grup {
  Group_1
  Group_2
  Juru_Masak_1
  Juru_Masak_2
  Pj_Lauk_Hewani
  None
}

enum JenisKelamin {
  Pria
  Wanita
}

model Absensi {
  id_absensi       Int       @id @unique @default(autoincrement())
  id_user          String    @db.VarChar(7)
  idUser           User?     @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Cascade)
  kode_shift       KodeShift @default(L)
  tanggal_absensi  DateTime  @default(now()) @db.DateTime()
  waktu_masuk      String?   @db.VarChar(10)
  waktu_pulang     String?   @db.VarChar(10)
  telat_masuk      String?   @db.VarChar(10)
  telat_pulang     String?   @db.VarChar(10)
  latitude_masuk   String?   @db.VarChar(30)
  longitude_masuk  String?   @db.VarChar(30)
  latitude_pulang  String?   @db.VarChar(30)
  longitude_pulang String?   @db.VarChar(30)
  foto_masuk       String?   @db.VarChar(255)
  status_hadir     String?   @db.VarChar(1)
}

enum KodeShift {
  P
  P1
  P2
  J
  J1
  SB
  SB1
  SB3
  S1
  N
  L
}

model Izin {
  id_izin              Int             @id @unique @default(autoincrement()) @db.Int()
  id_user              String          @db.VarChar(7)
  tanggal_mulai_izin   String          @db.VarChar(20)
  tanggal_selesai_izin String          @db.VarChar(20)
  tanggal_input_izin   DateTime?       @default(now()) @db.DateTime()
  alasan_izin          String          @db.VarChar(255)
  total_hari_izin      Int             @db.Int()
  status_izin          ApprovalStatus? @default(Pending)
  user                 User?           @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Cascade)
}

model Cuti {
  id_cuti              Int             @id @unique @default(autoincrement()) @db.Int()
  id_user              String          @db.VarChar(7)
  tanggal_mulai_cuti   String          @db.VarChar(20)
  tanggal_selesai_cuti String          @db.VarChar(20)
  tanggal_input_cuti   DateTime?       @default(now()) @db.DateTime()
  alasan_cuti          String          @db.VarChar(255)
  total_hari_cuti      Int             @db.Int
  status_cuti          ApprovalStatus? @default(Pending)
  user                 User?           @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Cascade)
}

model Sakit {
  id_sakit              Int             @id @unique @default(autoincrement()) @db.Int
  id_user               String          @db.VarChar(7)
  tanggal_mulai_sakit   String          @db.VarChar(20)
  tanggal_selesai_sakit String          @db.VarChar(20)
  tanggal_input_sakit   DateTime?       @default(now()) @db.DateTime()
  alasan_sakit          String          @db.VarChar(255)
  bukti_foto            String          @db.VarChar(255)
  total_hari_sakit      Int             @db.Int
  status_sakit          ApprovalStatus? @default(Pending)
  user                  User?           @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Cascade)
}

enum ApprovalStatus {
  Pending
  Diterima
  Ditolak
}
